##### Custom scalar for user aquire date
scalar UserAquireDate
scalar CalendarDate

##### Initial user info schema
type User {
  _id: ID!
  username: String
  password: String
  id: String!
  email: String!
  fname: String
  lname: String
  age: Int
  createdAt: String
}

###### Initial event user schema
type outputProps {
  ownerId: String!
  movements: String!
  description: String
}

type CalendarEvent {
  _id: ID!
  title: String!
  start: CalendarDate!
  end: CalendarDate!
  display: String!
  extendedProps: [outputProps!]!
}

###### Initial regstration/authorization schema
type AuthToken {
  token: String!
}



##### Top level declarations

type Query {
  currentUser: User @cypher( statement: "Match (u:UserInfo {fname: 'jordan'}) return u")
  events: [CalendarEvent]
}

type Mutation {
  signup(email: String!, password: String!): AuthToken
  login(email: String!, password: String!): AuthToken
  googleSignup(type: String): AuthToken
}