##### Custom scalar for user aquire date
scalar UserAquireDate
scalar CalendarDate

##### Initial user info schema
type UserInfo {
  _id: ID!
  email: String!
  fname: String
  lname: String
  createdAt: String
}

input SetUSERINFO {
  email: String!
  fname: String
  lname: String
  createdAt: String
}

###### Initial event user schema
input Props {
  ownerId: String!
  movements: String!
}

type outputProps {
  ownerId: String!
  movements: String!
}

type CalendarEvent {
  _id: ID!
  title: String!
  start: CalendarDate!
  end: CalendarDate!
  display: String!
  extendedProps: [outputProps!]!
}

input SetCALENDAREVENT {
  title: String!
  start: CalendarDate!
  end: CalendarDate!
  display: String!
  extendedProps: [Props!]!
}

input CalendarEventUpdate {
  title: String
  start: CalendarDate
  end: CalendarDate
  display: String
  extendedProps: [Props]
}

##### Top level declarations

type Query {
  getUserInfo: [UserInfo!]!
  getCalendarEvents: [CalendarEvent!]!
}

type Mutation {
  setUserInfo(info: SetUSERINFO!): UserInfo!
  setCalendarEvent(event: SetCALENDAREVENT!): CalendarEvent!
  setCalendarEventUpdate(_id: String!, changes: CalendarEventUpdate!): CalendarEvent!
}

#Make age not required